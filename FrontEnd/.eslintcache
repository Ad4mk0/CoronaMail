[{"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\index.tsx":"1","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\appState.tsx":"2","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\App.tsx":"3","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\mojko.tsx":"4","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\Home.tsx":"5","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\Unsub.tsx":"6","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\About.tsx":"7","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\BeSafe.tsx":"8","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\navbaris.tsx":"9","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\compo.tsx":"10","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\SelectCountry.tsx":"11"},{"size":364,"mtime":1614339028138,"results":"12","hashOfConfig":"13"},{"size":605,"mtime":1614336924072,"results":"14","hashOfConfig":"13"},{"size":1274,"mtime":1614336924068,"results":"15","hashOfConfig":"13"},{"size":260,"mtime":1614336924076,"results":"16","hashOfConfig":"13"},{"size":232,"mtime":1614336924070,"results":"17","hashOfConfig":"13"},{"size":969,"mtime":1614336924071,"results":"18","hashOfConfig":"13"},{"size":603,"mtime":1614339028134,"results":"19","hashOfConfig":"13"},{"size":975,"mtime":1614336924069,"results":"20","hashOfConfig":"13"},{"size":1977,"mtime":1614336924089,"results":"21","hashOfConfig":"13"},{"size":2289,"mtime":1614336924074,"results":"22","hashOfConfig":"13"},{"size":4591,"mtime":1614336924071,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19b5y5y",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\index.tsx",[],"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\appState.tsx",[],["52","53"],"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\App.tsx",[],"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\mojko.tsx",[],"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\Home.tsx",[],"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\Unsub.tsx",["54","55","56"],"import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport { Navbaris } from './navbaris';\r\nimport './About.css'\r\nimport { Select, Input, Radio, Spin } from \"antd\";\r\n\r\nexport const Unsub: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Navbaris />\r\n            <div className=\"zazrak1\">\r\n\r\n                <h1>Unsubscribe from email list</h1>\r\n                </div>\r\n                <div className='zazrak'>\r\n                <Input\r\n                    className=\"site-input-right\"\r\n                    style={{\r\n                        width: \"60%\",\r\n                        minWidth: \"150px\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                    placeholder=\"Your email\"\r\n                />\r\n                <Radio.Button value=\"default\" style={{ minWidth: \"50px\" }}>\r\n                    Unsubscribe\r\n          </Radio.Button>\r\n          \r\n        \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\About.tsx",[],"C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\BeSafe.tsx",["57"],"import React from 'react';\r\nimport { Navbaris } from './navbaris';\r\nimport './besafe.css'\r\nimport hcbgImage from \"./4309130.jpg\";\r\nimport SizeContext from 'antd/lib/avatar/SizeContext';\r\n\r\n\r\nexport const BeSafe: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Navbaris />\r\n            {/* <p>pijem pivo a honim si kokot</p> */}\r\n            <div\r\n                className=\"bg_image\"\r\n                style={{\r\n                    backgroundImage: `url(${hcbgImage})`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: 'center',\r\n                    WebkitBackgroundSize:'100%',\r\n                    minWidth:'90wh',\r\n                    maxWidth: 'auto',\r\n                    minHeight: '95vh',\r\n                    maxHeight: 'auto',\r\n                    overflow:'hidden',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    \r\n                }}>\r\n                \r\n      </div>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\navbaris.tsx",["58","59"],"import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { useRouteMatch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { StringLiteral } from 'typescript';\r\nimport { useAppState } from './appState'\r\nimport './navbaris.css'\r\n\r\n\r\nexport const Navbaris: React.FC = () => {\r\n  const route: {params: {page: string}} = useRouteMatch('/:page') || { params: { page: '' } }\r\n  console.log(route)\r\n  const activeRoute = route.params.page\r\n  console.log(activeRoute)\r\n\r\n  function getActiveRouteStyle(navRouteName: string) {\r\n    if (navRouteName === activeRoute) {\r\n      return { color: 'white' }\r\n    }\r\n    return {}\r\n  }\r\n\r\n\r\n  const { selectedCountry, setSelectedCountry } = useAppState()\r\n\r\n\r\n\r\n  return (\r\n\r\n    // <div className=\"hm\">\r\n    <Navbar collapseOnSelect expand=\"sm\" bg=\"danger\" variant=\"dark\">\r\n      <Navbar.Brand><Link to=\"/\">{selectedCountry}</Link>  </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link style={getActiveRouteStyle('select')}><Link to=\"/select\">Select Country</Link></Nav.Link>\r\n          <Nav.Link style={getActiveRouteStyle('besafe')}><Link to=\"/besafe\">be safe!</Link></Nav.Link>\r\n          <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link style={getActiveRouteStyle('about')}><Link to=\"/about\">About</Link>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n\r\n  )\r\n}\r\n","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\compo.tsx",["60"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport img1 from './3907960.jpg'\r\nimport img2 from './3676640.jpg';\r\nimport img3 from './5474.jpg'\r\nimport './compo.css'\r\nimport {useAppState} from './appState'\r\n\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nexport type CoronaApiData = {\r\n  deaths: number,\r\n  recovered: number\r\n  confirmed: number\r\n}\r\n\r\nexport const Daticka: React.FC = () => {\r\n\r\n  const [coroData, setCoroData] = useState<CoronaApiData>({\r\n    confirmed: 0,\r\n    deaths: 0,\r\n    recovered: 0\r\n  })\r\n\r\n  const {selectedCountry, setSelectedCountry } = useAppState()\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log(selectedCountry)\r\n    const corApi = 'https://coronavirus-tracker-api.herokuapp.com/v2/locations?country='\r\n    axios.get(corApi.concat(selectedCountry), {headers: { 'Content-Type': 'application/json'}})\r\n      .then((data) => {\r\n      setCoroData(data.data.latest as CoronaApiData)\r\n      console.log('hadi prdi')\r\n      })},[selectedCountry]);\r\n\r\n\r\n  \r\n    return <MyComponent \r\n \r\n        //bazmekData = {bazmekData}\r\n        selectedCountry = {selectedCountry}\r\n        coroData = {coroData}\r\n\r\n                        />\r\n\r\n}\r\n\r\n\r\nexport const MyComponent: React.FC<{\r\n  selectedCountry: string,\r\n  coroData: CoronaApiData,\r\n\r\n}> = ({selectedCountry,coroData}) => { \r\n  console.log(coroData)\r\n  return <>\r\n    <div className=\"haha\">\r\n    <CardColumns>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={img1} />\r\n    <Card.Body>\r\n      <Card.Title>Total deaths</Card.Title>\r\n      <Card.Text>\r\n        Total deaths in {selectedCountry} are {coroData.deaths}.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={img2} />\r\n    <Card.Body>\r\n      <Card.Title>Inficated</Card.Title>\r\n      <Card.Text>\r\n        Number of total infications in {selectedCountry} are {coroData.confirmed}.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={img3} />\r\n    <Card.Body>\r\n      <Card.Title>Retrieved</Card.Title>\r\n      <Card.Text>\r\n        Number of Retrieved in {selectedCountry} are {coroData.recovered}.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n</CardColumns>\r\n</div>\r\n\r\n  </> ;\r\n}\r\n","C:\\Users\\Dominik\\Documents\\Job\\CoronaMail\\FrontEnd\\src\\SelectCountry.tsx",["61","62","63","64","65"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./selectcountry.css\";\r\nimport { Daticka } from \"./compo\";\r\nimport { Select, Input, Radio, Spin, Popover } from \"antd\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { useAppState } from \"./appState\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n\r\ntype CoronaVirusApiResponse = { locations: [{ country: string }] };\r\n\r\nexport const Appy = () => {\r\n  const [counter, setCounter] = useState(0);\r\n  const [coroPlaces, setCoroPlaces] = useState<CoronaVirusApiResponse>();\r\n  useEffect(() => {\r\n    const apiUrl = \"https://coronavirus-tracker-api.herokuapp.com/v2/locations\";\r\n    axios\r\n      .get(apiUrl)\r\n      .then((res: { data: CoronaVirusApiResponse }) => setCoroPlaces(res.data));\r\n  }, [counter]);\r\n  return (\r\n    <Spin spinning={!coroPlaces} >\r\n      {coroPlaces &&\r\n        <SelectCountry coroPlaces={coroPlaces} />\r\n      }\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport const SelectCountry: React.FC<{\r\n  coroPlaces: CoronaVirusApiResponse;\r\n}> = ({ coroPlaces }) => {\r\n  const { selectedCountry, setSelectedCountry } = useAppState();\r\n\r\n  var JSONObject = coroPlaces;\r\n  const v = JSONObject.locations;\r\n  var arrayLength = v ? v.length : \"null\";\r\n\r\n  const mySet1: Set<string> = new Set();\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    mySet1.add(v[i].country);\r\n  }\r\n\r\n  var countries = Array.from(mySet1);\r\n  //console.log(countries);\r\n\r\n  const { Option } = Select;\r\n\r\n  function handleChange(value: string) {\r\n    setSelectedCountry(value);\r\n  }\r\n  const content = (\r\n    <div>\r\n      <div>\r\n        <p>By subscribing to our newsletter you agree to receive email from us. The aim of our newletter service is to keep our customers and visitors updated about coronavirus pandemic. The subscription to our newsletter service is not mandatory.</p>\r\n\r\n        <h4>1. Frequency</h4>\r\n        <p>The frequency of the newletter issues will be at most once a day.</p>\r\n\r\n        <h4>2. Limited Liability</h4>\r\n        <p>We reserve the sole right to either modify or discontinue the newletter, at any time with or without notice to you. We are not responsible for truthfulness of data we provide. We will not be liable to you or any third party should we exercise such right. Any new features that augment or enhance the then-current services on this site shall also be subject to these Terms of Use.\r\nWe reserve the sole right to unsubscribe users / visitors from or newsletter service, without notice . We will do so with any subscriber we deem registered with fake data.</p>\r\n\r\n        <h4>3. Double opt-in</h4>\r\n        <p>We require all subscribers to confirm their email address upon registration. You will therefor receive a message with a link you'll have to click in order to confirm the email address and your will to subscribe.</p>\r\n\r\n        <h4>4. Privacy policy</h4>\r\n        <p>We will not communicate , spread , publish or otherwise give away your address. You'll be able to change your subscription settings or to delete it alltogether anytime.</p>\r\n      </div>\r\n      <Radio.Button value=\"default\" style={{ minWidth: \"25px\" }}>Accept</Radio.Button>\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container h-100 d-flex mt-sm-4 justify-content-center\">\r\n        <h2>{selectedCountry}</h2>\r\n      </div>\r\n\r\n      <div className=\"inputgrup\">\r\n        <Input.Group compact>\r\n          <Select\r\n            value={selectedCountry}\r\n            style={{ width: \"20%\", minWidth: \"150px\" }}\r\n            onChange={handleChange}\r\n          >\r\n            {countries.map((country) => (\r\n              <Option value={country} key={country}>\r\n                {country}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          <Input\r\n            className=\"site-input-right\"\r\n            style={{\r\n              width: \"60%\",\r\n              minWidth: \"150px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            placeholder=\"Recipient's email\"\r\n          />\r\n          <Popover placement=\"bottomRight\" content={content} title={<h3>Terms and conditions</h3>} trigger=\"hover\">\r\n            <div className='zrobim'>\r\n            <Radio.Button value=\"default\" style={{ minWidth: \"50px\" }}>\r\n              Subscribe\r\n          </Radio.Button>\r\n          </div>\r\n          </Popover>\r\n        </Input.Group>\r\n      </div>\r\n      <div className=\"mojMalyPesTobi\">\r\n        <Daticka />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":16},{"ruleId":"70","severity":1,"message":"75","line":5,"column":32,"nodeType":"72","messageId":"73","endLine":5,"endColumn":36},{"ruleId":"70","severity":1,"message":"76","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":19},{"ruleId":"70","severity":1,"message":"77","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":23},{"ruleId":"70","severity":1,"message":"78","line":24,"column":28,"nodeType":"72","messageId":"73","endLine":24,"endColumn":46},{"ruleId":"70","severity":1,"message":"78","line":26,"column":27,"nodeType":"72","messageId":"73","endLine":26,"endColumn":45},{"ruleId":"70","severity":1,"message":"79","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":14},{"ruleId":"70","severity":1,"message":"80","line":8,"column":8,"nodeType":"72","messageId":"73","endLine":8,"endColumn":18},{"ruleId":"70","severity":1,"message":"81","line":9,"column":8,"nodeType":"72","messageId":"73","endLine":9,"endColumn":19},{"ruleId":"70","severity":1,"message":"82","line":11,"column":10,"nodeType":"72","messageId":"73","endLine":11,"endColumn":19},{"ruleId":"70","severity":1,"message":"83","line":17,"column":19,"nodeType":"72","messageId":"73","endLine":17,"endColumn":29},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"@typescript-eslint/no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'Spin' is defined but never used.","'SizeContext' is defined but never used.","'StringLiteral' is defined but never used.","'setSelectedCountry' is assigned a value but never used.","'Button' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Container' is defined but never used.","'setCounter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]