[{"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\App.tsx":"1","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\About.tsx":"2","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\BeSafe.tsx":"3","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Home.tsx":"4","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Unsub.tsx":"5","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Conditions.tsx":"6","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Select.tsx":"7","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\appState.tsx":"8","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\navbaris.tsx":"9","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\infoBar.tsx":"10","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\index.tsx":"11","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\SelectCountry.tsx":"12","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\graph.tsx":"13"},{"size":1465,"mtime":1614698226781,"results":"14","hashOfConfig":"15"},{"size":691,"mtime":1614591763031,"results":"16","hashOfConfig":"15"},{"size":553,"mtime":1614591472627,"results":"17","hashOfConfig":"15"},{"size":338,"mtime":1614779427885,"results":"18","hashOfConfig":"15"},{"size":2911,"mtime":1614729921879,"results":"19","hashOfConfig":"15"},{"size":2113,"mtime":1614591472713,"results":"20","hashOfConfig":"15"},{"size":290,"mtime":1614591913315,"results":"21","hashOfConfig":"15"},{"size":605,"mtime":1614591424468,"results":"22","hashOfConfig":"15"},{"size":1942,"mtime":1614698301572,"results":"23","hashOfConfig":"15"},{"size":2461,"mtime":1614698208451,"results":"24","hashOfConfig":"15"},{"size":383,"mtime":1614591610830,"results":"25","hashOfConfig":"15"},{"size":4803,"mtime":1614780995935,"results":"26","hashOfConfig":"15"},{"size":1813,"mtime":1614796624752,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6n77sq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\App.tsx",[],["59","60"],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\About.tsx",[],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\BeSafe.tsx",[],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Home.tsx",[],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Unsub.tsx",["61","62","63","64"],"import React from 'react';\r\nimport { Navbaris } from './components/navbaris';\r\nimport './designs/About.css'\r\nimport { Radio } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Formik } from 'formik';\r\nimport { Input  as  FormikInput} from \"formik-antd\";\r\nimport { message, Button, Space } from 'antd';\r\n\r\ninterface Values {\r\n    email: string;\r\n}\r\n\r\nexport const Unsub: React.FC = () => {\r\n    function validateEmail(email:string) {\r\n        if (!email) {\r\n          message.error('Required')\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n          message.error('Invalid email address')\r\n        }\r\n        else {return \"ok\"}\r\n      }\r\n      \r\n    function delUser(email: string) {\r\n        axios.post(\"http://localhost:4000/api/unsubscribe\", {\r\n            email: email,\r\n\r\n        }, { headers: { \"Access-Control-Allow-Origin\": \"*\" } }).then(function(response) {\r\n            var resp = response.data;\r\n            if (resp === \"success\"){\r\n              //console.log(\"popici\")\r\n              message.success('You have successfully unsubscribed');\r\n            } else if (resp.message === undefined){\r\n            message.error(\"Email is not present in database\")\r\n            //message.error(\"Error\"+ resp.message);\r\n            }\r\n        });}\r\n\r\n    return (\r\n        <>\r\n\r\n            <Navbaris />\r\n\r\n            <div className=\"zazrak1\">\r\n\r\n                <h1>Unsubscribe from email list</h1>\r\n            </div>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                }}\r\n                onSubmit={() => undefined}>\r\n                {({ values }) => (\r\n                    <div className='zazrak'>\r\n                        <FormikInput\r\n                            className=\"site-input-right\"\r\n                            style={{\r\n                                width: \"60%\",\r\n                                minWidth: \"150px\",\r\n                                textAlign: \"center\",\r\n                            }}\r\n                            placeholder=\"Your email\"\r\n\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                        />\r\n                        <Radio.Button onClick={() => {\r\n                    //console.log(values.email)\r\n                    //if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                     ///   message.error('Invalid email address')\r\n                    ///} else {\r\n                    if (validateEmail(values.email)==\"ok\"){\r\n                    delUser(values.email)}\r\n                  }} \r\n                        type=\"submit\" value=\"default\" style={{ minWidth: \"50px\" }}>\r\n                            Unsubscribe\r\n          </Radio.Button>\r\n                    </div>\r\n\r\n                )}\r\n\r\n            </Formik>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Conditions.tsx",[],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\Select.tsx",[],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\appState.tsx",[],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\navbaris.tsx",["65"],"import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { useRouteMatch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAppState } from './appState'\r\nimport '../designs/navbaris.css'\r\n\r\n\r\n\r\nexport const Navbaris: React.FC = () => {\r\n  const route: {params: {page: string}} = useRouteMatch('/:page') || { params: { page: '' } }\r\n  //console.log(route)\r\n  const activeRoute = route.params.page\r\n  //console.log(activeRoute)\r\n\r\n  function getActiveRouteStyle(navRouteName: string) {\r\n    if (navRouteName === activeRoute) {\r\n      return { color: 'white' }\r\n    }\r\n    return {}\r\n  }\r\n\r\n\r\n  const { selectedCountry, setSelectedCountry } = useAppState()\r\n\r\n\r\n\r\n  return (\r\n\r\n    // <div className=\"hm\">\r\n    <Navbar collapseOnSelect expand=\"sm\" bg=\"danger\" variant=\"dark\">\r\n      <Navbar.Brand><Link to=\"/\">{selectedCountry}</Link>  </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link style={getActiveRouteStyle('select')}><Link to=\"/select\">Select Country</Link></Nav.Link>\r\n          <Nav.Link style={getActiveRouteStyle('besafe')}><Link to=\"/besafe\">Be safe!</Link></Nav.Link>\r\n          {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n          </NavDropdown> */}\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link style={getActiveRouteStyle('about')}><Link to=\"/about\">About</Link>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n\r\n  )\r\n}\r\n","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\infoBar.tsx",["66"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport img1 from '../images/3907960.jpg';\r\nimport img2 from '../images/3676640.jpg';\r\nimport img3 from '../images/5474.jpg';\r\nimport '../designs/compo.css';\r\n\r\nimport {useAppState} from './appState';\r\n\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport type CoronaApiData = {\r\n  deaths: number,\r\n  recovered: number\r\n  confirmed: number\r\n}\r\n\r\nexport const Daticka: React.FC = () => {\r\n\r\n  const [coroData, setCoroData] = useState<CoronaApiData>({\r\n    confirmed: 0,\r\n    deaths: 0,\r\n    recovered: 0\r\n  })\r\n\r\n  const {selectedCountry, setSelectedCountry } = useAppState()\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    //console.log(selectedCountry)\r\n    const corApi = 'https://coronavirus-tracker-api.herokuapp.com/v2/locations?country='\r\n    //{headers: { 'Content-Type': 'application/json', \"Access-Control-Allow-Origin\": \"*\"}}\r\n    axios.get(corApi.concat(selectedCountry), {headers: { 'Content-Type': 'application/json', \"Access-Control-Allow-Origin\": \"*\"}})\r\n      .then((data) => {\r\n      setCoroData(data.data.latest as CoronaApiData)\r\n      //console.log('hadi prdi')\r\n      })},[selectedCountry]);\r\n\r\n\r\n  \r\n    return <MyComponent \r\n \r\n        //bazmekData = {bazmekData}\r\n        selectedCountry = {selectedCountry}\r\n        coroData = {coroData}\r\n\r\n                        />\r\n\r\n}\r\n\r\n\r\nexport const MyComponent: React.FC<{\r\n  selectedCountry: string,\r\n  coroData: CoronaApiData,\r\n\r\n}> = ({selectedCountry,coroData}) => { \r\n  //console.log(coroData)\r\n  return <>\r\n    <div className=\"haha\">\r\n    <CardColumns>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={img1} />\r\n    <Card.Body>\r\n      <Card.Title>Total deaths</Card.Title>\r\n      <Card.Text>\r\n        Total deaths in {selectedCountry} are {coroData.deaths}.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={img2} />\r\n    <Card.Body>\r\n      <Card.Title>Infected</Card.Title>\r\n      <Card.Text>\r\n        Number of total infections in {selectedCountry} are {coroData.confirmed}.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={img3} />\r\n    <Card.Body>\r\n      <Card.Title>Retrieved</Card.Title>\r\n      <Card.Text>\r\n        Number of Retrieved in {selectedCountry} are {coroData.recovered}.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n</CardColumns>\r\n</div>\r\n\r\n  </> ;\r\n}\r\n","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\index.tsx",[],"C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\SelectCountry.tsx",["67","68","69"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport \"../designs/selectcountry.css\";\r\nimport { Daticka } from \"./infoBar\";\r\nimport { Select, Radio, Spin, Input } from \"antd\";\r\nimport { useAppState } from \"./appState\";\r\nimport { Formik } from 'formik';\r\nimport { Input as FormikInput } from \"formik-antd\";\r\nimport { message, Button, Space } from 'antd';\r\n\r\n\r\ninterface Values {\r\n  email: string;\r\n  country: string;\r\n}\r\n\r\ntype CoronaVirusApiResponse = { locations: [{ country: string }] };\r\n\r\nexport const Appy = () => {\r\n  //const [counter, setCounter] = useState(0);\r\n  const [coroPlaces, setCoroPlaces] = useState<CoronaVirusApiResponse>();\r\n  useEffect(() => {\r\n    const apiUrl = \"https://coronavirus-tracker-api.herokuapp.com/v2/locations\";\r\n    axios\r\n      .get(apiUrl, { headers: { 'Content-Type': 'application/json', \"Access-Control-Allow-Origin\": \"*\" } })\r\n      .then((res: { data: CoronaVirusApiResponse }) => setCoroPlaces(res.data));\r\n  }, []);\r\n  return (\r\n    <Spin spinning={!coroPlaces} >\r\n      {coroPlaces &&\r\n        <SelectCountry coroPlaces={coroPlaces} />\r\n      }\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport const SelectCountry: React.FC<{\r\n  coroPlaces: CoronaVirusApiResponse;\r\n}> = ({ coroPlaces }) => {\r\n  const { selectedCountry, setSelectedCountry } = useAppState();\r\n\r\n  var JSONObject = coroPlaces;\r\n  const v = JSONObject.locations;\r\n  var arrayLength = v ? v.length : \"null\";\r\n\r\n  const mySet1: Set<string> = new Set();\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    mySet1.add(v[i].country);\r\n  }\r\n\r\n  var countries = Array.from(mySet1);\r\n  //console.log(countries);\r\n\r\n  const { Option } = Select;\r\n\r\n  function handleChange(value: string) {\r\n    setSelectedCountry(value)\r\n  };\r\n\r\n  function addUser(email: string, country: string) {\r\n    axios.post(\"http://localhost:4000/api/create\", {\r\n      email: email,\r\n      country: country // This is the body part\r\n    }, { headers: { \"Access-Control-Allow-Origin\": \"*\" } }).then(function(response) {\r\n    var resp = response.data;\r\n    if (resp === \"success\"){\r\n      //console.log(\"popici\")\r\n      message.success('You have successfully subscribed');\r\n    } else if (resp.message === undefined){\r\n      message.error(\"Email already in use\");\r\n      //message.error(\"Error\"+ resp.message);\r\n      }\r\n  });}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <div className=\"page\">\r\n      <div className=\"container h-100 d-flex mt-sm-4 justify-content-center\">\r\n        <h2>{selectedCountry}</h2>\r\n      </div>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          country: selectedCountry,\r\n          picked: '',\r\n        }}\r\n        onSubmit={() => undefined}>\r\n        {({ values }) => (\r\n          <div className=\"inputgrup\">\r\n            <Input.Group compact>\r\n              <Select\r\n                value={selectedCountry}\r\n                style={{ width: \"20%\", minWidth: \"150px\" }}\r\n                onChange={handleChange}\r\n              >\r\n                {countries.map((country) => (\r\n                  <Option value={country} key={country}>\r\n                    {country}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n              <FormikInput\r\n                className=\"site-input-right\"\r\n                style={{\r\n                  width: \"60%\",\r\n                  minWidth: \"150px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                placeholder=\"Recipient's email\"\r\n                id=\"email\" name=\"email\"\r\n                type=\"email\"\r\n              />\r\n              <div className='zrobim'>\r\n                <Radio.Button onClick={() => {\r\n                  if (values.picked===''){\r\n                    message.error('You must agree to Terms and Conditions')\r\n                  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                    message.error('Invalid email address')\r\n                  } else {\r\n                    addUser(values.email, selectedCountry)\r\n                  }\r\n\r\n                }} type=\"submit\" value=\"default\" style={{ minWidth: \"50px\" }}>\r\n                  Subscribe\r\n                 </Radio.Button>\r\n\r\n              </div>\r\n              <div className=\"radiobut\">\r\n\r\n\r\n                <Radio onChange={() => {\r\n                  values.picked = \"Agree\"\r\n                  //console.log(values.picked)\r\n                }} type=\"radio\" name=\"picked\" value=\"Agree\">Agree to <Link to=\"/conditions\" style={{ color: \"blue\" }}>Terms and conditions</Link></Radio>\r\n\r\n              </div>\r\n\r\n            </Input.Group>\r\n\r\n          </div>\r\n        )}\r\n\r\n      </Formik>\r\n      <div className=\"mojMalyPesTobi\">\r\n        <Daticka />\r\n\r\n      </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\42195\\Desktop\\corona\\FrontEnd\\src\\components\\graph.tsx",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":8,"column":19,"nodeType":"77","messageId":"78","endLine":8,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":8,"column":27,"nodeType":"77","messageId":"78","endLine":8,"endColumn":32},{"ruleId":"75","severity":1,"message":"80","line":10,"column":11,"nodeType":"77","messageId":"78","endLine":10,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":73,"column":52,"nodeType":"83","messageId":"84","endLine":73,"endColumn":54},{"ruleId":"75","severity":1,"message":"85","line":24,"column":28,"nodeType":"77","messageId":"78","endLine":24,"endColumn":46},{"ruleId":"75","severity":1,"message":"85","line":27,"column":27,"nodeType":"77","messageId":"78","endLine":27,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":11,"column":19,"nodeType":"77","messageId":"78","endLine":11,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":11,"column":27,"nodeType":"77","messageId":"78","endLine":11,"endColumn":32},{"ruleId":"75","severity":1,"message":"80","line":14,"column":11,"nodeType":"77","messageId":"78","endLine":14,"endColumn":17},{"ruleId":"75","severity":1,"message":"86","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":30},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","'Values' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setSelectedCountry' is assigned a value but never used.","'PureComponent' is defined but never used.","no-global-assign","no-unsafe-negation"]